---
- name: Install and configure web servers
  hosts: dynweb
  become: yes
    
  tasks:
    - name: Add repo epel-release 
      dnf:
        name: epel-release
        state: present
        
    - name: disable ssl for epel repo 
      lineinfile: 
        dest: /etc/yum.repos.d/epel.repo
        insertafter: 'enabled=1' 
        line: 'sslverify=0'

    - name: Install packages
      dnf:
        name:
          - nginx
          - python3-devel
          - python3-pip
          - python3-virtualenv
          - git
          - sqlite-devel
          - npm
          - net-tools
        state: present
        
    - name: Put SELinux in permissive mode, logging actions that would be blocked.
      selinux:
        policy: targeted
        state: permissive
        
         
    # Copy a repo with separate git directory    
    - ansible.builtin.git:
        repo: 'https://github.com/mikhail-pavliy/go-http-hello-world.git'
        dest: '/root/go-http-hello-world'
        force: yes

    - name: copy exe
      get_url: 
        url: 'https://raw.githubusercontent.com/mikhail-pavliy/go-http-hello-world/main/hello_world/hello_world'
        validate_certs: no
        dest: '/root/go-http-hello-world/hello_world/hello_world'
        owner: root
        group: root
        mode: '0755'
     
    # Copy a repo with separate git directory    
    - ansible.builtin.git:
        repo: 'https://github.com/mikhail-pavliy/react-helloworld.git'
        dest: '/root/react-helloworld'
        force: yes
      notify:
      - setup npm
      
    # Copy a repo with separate git directory
    - ansible.builtin.git:
        repo: 'https://github.com/mikhail-pavliy/django.git'
        dest: '/root/django-helloworld'
        force: yes

    - pip:
        name: django==2.2.3
        executable: pip3

        
    - file:
        dest: '/root/django-helloworld/manage.py'
        mode: 'a+x'
        
    - django_manage:
        command: migrate
        app_path: '/root/django-helloworld'
        
    - name: copy config files
      copy: 
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
        mode: '0644'
      with_items:
        - { src: 'files/django.service', dest: '/etc/systemd/system/' }
        - { src: 'files/go.service', dest: '/etc/systemd/system/' }
        - { src: 'files/react.service', dest: '/etc/systemd/system/' }
        - { src: 'files/nginx/nginx.conf', dest: '/etc/nginx/' }
        - { src: 'files/nginx/conf.d/go.conf', dest: '/etc/nginx/conf.d/' }
        - { src: 'files/nginx/conf.d/react.conf', dest: '/etc/nginx/conf.d/' }
        - { src: 'files/nginx/conf.d/django.conf', dest: '/etc/nginx/conf.d/' }
      notify:
      - restart all services

      
    - name: daemon started
      systemd:
        name: django
        state: started
        enabled: yes
        
        
    - name: daemon started
      systemd:
        name: go
        state: started
        enabled: yes
        
    - name: daemon started
      systemd:
        name: react
        state: started
        enabled: yes
      
    - name: daemon started
      systemd:
        name: nginx
        state: started
        enabled: yes
      
  handlers:
  - name: setup npm
    shell: |
      cd /root/react-helloworld/
      echo "" | npm init
      npm config set strict-ssl false
      npm install webpack webpack-dev-server --save
      npm install react react-dom --save
      npm install babel-core babel-loader babel-preset-react babel-preset-es2015 --save
      exit 0
    args:
      executable: /bin/bash
  - name: restart all services
    service:
      name: "{{ item }}"
      state: restarted
    with_items:
      - django
      - go
      - react
      - nginx
